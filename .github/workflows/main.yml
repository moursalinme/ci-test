name: Run tests - Backend

on:
  push:
    branches: ["main", "dev"]
    paths:
      - "backend/src/**"
      - "backend/pom.xml"
      - "database/init.sql"
  pull_request:
    branches: ["main", "dev"]
    paths:
      - "backend/src/**"
      - "backend/pom.xml"
      - "database/init.sql"

  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to run tests against"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - test
      debug_enabled:
        description: "Enable debug logging"
        required: false
        type: boolean
        default: false

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker container for PostgreSQL
        run: |
          docker pull postgres:17-alpine
          docker run -d \
            --name ${{ secrets.DB_CONTAINER_NAME }} \
            -e POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
            -e POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
            -v ${{ github.workspace }}/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro \
            -p 5432:5432 \
            postgres:17-alpine

      - name: Database logs
        if: always()
        run: docker logs ${{ secrets.DB_CONTAINER_NAME }}

      - name: Database container inspection
        if: always()
        run: docker inspect ${{ secrets.DB_CONTAINER_NAME }}

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: "temurin"
          cache: "maven"

      - name: Make maven wrapper executable
        working-directory: ./backend
        run: chmod +x mvnw

      - name: Build and test with mvnw
        working-directory: ./backend
        env:
          POSTGRES_DB_HOST: localhost
          POSTGRES_DB_PORT: 5432
          POSTGRES_DB_NAME: ${{ secrets.POSTGRES_DB_NAME }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          SERVER_PORT: ${{ secrets.BACKEND_SERVER_PORT }}
        run: ./mvnw clean test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./backend/target/surefire-reports/
